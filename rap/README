= {Rap (Rakish App)}[http://tap.rubyforge.org/rap]

  rap v. a quick, sharp knock or blow
  rakish adj. having a dashing, jaunty, or slightly disreputable quality or appearance

The rakish app extension to {Tap}[http://tap.rubyforge.org].

== Description

{Rake}[http://rake.rubyforge.org/] is great, but it has significant limitations
when used as a general task framework.  Rap supercharges the syntax of Rake,
allowing the declaration of tasks with configurations and extended documentation,
and making tasks class-based so they may be more easily tested.

Check out these links for documentation, development, and bug tracking.

* Website[http://tap.rubyforge.org]
* Lighthouse[http://bahuvrihi.lighthouseapp.com/projects/9908-tap-task-application/tickets]
* Github[http://github.com/bahuvrihi/tap/tree/master]
* {Google Group}[http://groups.google.com/group/ruby-on-tap]

== Usage

Usage is much like rake:

  [Rapfile]
  require 'rap/declarations'
  include Rap::Declarations
  
  desc "your basic goodnight moon task"
  
  # Says goodnight with a configurable message.
  task(:goodnight, :obj, :message => 'goodnight') do |task, args|
    puts "#{task.message} #{args.obj}\n"
  end
  
Now from the command line:

  % rap goodnight moon
  goodnight moon
  
  % rap goodnight world --message hello
  hello world
  
  % rap goodnight --help
  Goodnight -- your basic goodnight moon task
  --------------------------------------------------------------------------------
    Says goodnight with a configurable message.
  --------------------------------------------------------------------------------
  usage: rap goodnight OBJ

  configurations:
          --message MESSAGE

  options:
      -h, --help                       Print this help
          --name NAME                  Specify a name
          --use FILE                   Loads inputs from file

For testing, load the Rapfile and access the task as a constant.

  [test.rb]
  load 'Rapfile'
  require 'test/unit'
  require 'stringio'
  
  class RapfileTest < Test::Unit::TestCase
    def test_the_goodnight_task
      $stdout = StringIO.new
      
      task = Goodnight.new
      assert_equal 'goodnight', task.message
      
      task.process('moon')
      assert_equal "goodnight moon", $stdout.string
    end
  end

The test passes:

  % ruby test.rb
  Loaded suite test
  Started
  .
  Finished in 0.004921 seconds.

  1 tests, 2 assertions, 0 failures, 0 errors

=== Limitations

Rap is not a pure replacement of Rake; it does not support builds by default,
and many of the Rake-specific classes (ex FileList) are not included.  Moreover
rap and rake resolve dependencies differently.  For example:

  [Rapfile]
  include Rap::Declarations
  
  task(:outer) { puts "outer" }
  namespace(:nest) do
    task(:name => [:outer, 'nest:outer'])
    task(:outer) { puts "inner" }
  end

On the command line:

  % rap nest/name
  outer
  inner
  
If you did this with rake, you'd get:

  % rake nest:name
  inner

Rap always resolves dependencies as constants (ie 'outer' => Outer and
'nest:outer' => Nest::Outer) while rake waits until execution, at which time
it uses tasks in the current namespace before looking in higher namespaces.

== Installation

Rap is available as a gem on RubyForge[http://rubyforge.org/projects/tap].  Use:

  % gem install rap

Rap requires an updated version of RubyGems[http://docs.rubygems.org/] 
(>= 1.2.0).  To check the version and update RubyGems:

  % gem --version
  % gem --update system
    
== Info 

Copyright (c) 2006-2008, Regents of the University of Colorado.
Developer:: {Simon Chiang}[http://bahuvrihi.wordpress.com], {Biomolecular Structure Program}[http://biomol.uchsc.edu/], {Hansen Lab}[http://hsc-proteomics.uchsc.edu/hansenlab/] 
Support:: CU Denver School of Medicine Deans Academic Enrichment Fund
Licence:: {MIT-Style}[link:files/MIT-LICENSE.html]

