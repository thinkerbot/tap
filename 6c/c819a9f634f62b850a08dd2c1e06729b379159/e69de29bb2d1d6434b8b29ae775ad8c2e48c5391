{"author":" <simon.a.chiang@gmail.com>","title":"Filtering of build by resource type","tags":["open"],"date":"2009-12-09T17:55:59Z","type":"issue","content":"For example:\r\n\r\n  % tap generate task blue\r\n  /Library/Ruby/Gems/1.8/gems/tap-0.19.0/lib/tap/signals.rb:14:in `signal': unknown signal: set (Rap::Task) (RuntimeError)\r\n\tfrom /Library/Ruby/Gems/1.8/gems/tap-gen-0.3.1/cmd/generate.rb:26\r\n\tfrom /Library/Ruby/Gems/1.8/gems/tap-0.19.0/bin/tap:55:in `load'\r\n\tfrom /Library/Ruby/Gems/1.8/gems/tap-0.19.0/bin/tap:55\r\n\tfrom /usr/bin/tap:19:in `load'\r\n\tfrom /usr/bin/tap:19\r\n\r\nWhereas:\r\n\r\n  % tap generate tap-gen:task blue\r\n\r\nWorks perfectly fine.  The reason is that when the generate command builds the ARGV, 'task' is resolved to a const in a general way.  That means that overlapping resources will be resolved together and rap:task comes up first.  There should be a flag or some way to filter on a given resource type (only generator, task, etc).\r\n","at":"18645d6441d392d024b787598632ebb1d1c7431a","state":"open"}