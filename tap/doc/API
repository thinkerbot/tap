= Application Programming Interfaces

Note these are all currently provisional.  The required methods are listed in the table with the parameter signature and expected return value.

method:: (a,b,c) => return value

== Node

call:: (any parameter signature) => any return
dependencies:: () => an array of Dependencies
join:: () => a Join or nil

== Join

call:: (result) => any return

== Dependency 

call:: () => any return
dependencies:: () => an array of Dependencies
join:: () => a Join or nil
reset:: () => any return
result:: () => any return

Note that a dependency has the same requirements as a node, but call is restricted to take no inputs.  By convention dependencies are setup so that:
- call will only execute once
- the result of call is stored as result
- reset allows call to execute again, and sets result to nil

However, the exact behavior is up to the user.

== Class Dependency

DependencyClass.new:: () => instance of DependencyClass
call:: (any parameter signature) => any return

== Application Middleware

Middleware.new:: (stack) => instance of middleware
call:: (node, [inputs array]) => any return
stack:: () => the input stack

The middleware API is essentially the same as for Rack.