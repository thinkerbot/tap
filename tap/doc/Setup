= Setup

By default the tap executable that runs through RubyGems is setup for
convenience, not performance. RubyGems allows tap to make resources from gems
automatically available, but the overhead of RubyGems significantly slows the
tap launch time.

Much faster startup can be achieved by circumventing RubyGems. Tap can be
installed as a single file that you put along your PATH. Run in this way, the
executable will not load RubyGems nor guess which resources you want made
available. This setup can be very useful when launch time matters but requires
users to manually configure tap using several ENV variables (see below).

To be clear, the performance difference is between fast and instantaneous.
Most people will not need to go through this setup, which can be a little
technical.

== Installation

To generate an installable tap:

  % gem install tap-gen
  % tap generate tap

This will produce an executable 'tap' file and a 'profile.sh' script that will
export sensible ENV defaults.

  % source profile.sh
  % ./tap -d-
          ruby: ruby-1.9.1 (2010-01-10)
           tap: 1.0.0
          gems: 
          path: .
        tapenv: ~/.tapenv:tapenv
         taprc: ~/.taprc:taprc
       tapfile: tapfile

As shown, the executable can be run immediately, if desired. To install,
replace the executable run by RubyGems with the generated one and append the
profile script to your bash profile. For example, you could do this (<em>be
sure you know what this does before doing it</em>):

  # check which tap to replace
  % which tap
  /usr/bin/tap
  
  # backup files
  % mv /usr/bin/tap /usr/bin/tap.bak
  % cp ~/.bash_profile ~/.bash_profile.bak
  
  # install
  % mv tap /usr/bin/tap
  % cat profile.sh >> ~/.bash_profile
  
  # uninstall
  % mv /usr/bin/tap.bak /usr/bin/tap
  % mv ~/.bash_profile.bak ~/.bash_profile

When you first install tap like this, tap will have no resources loaded by
default. Generate tapenv files for the resources you want available using the
env generator. To make all current gems available, run this command to create
a ~/tapenv file:

  % TAP_GEMS=. tap generate env --auto -: dump ~/tapenv

Note the generated tap is linked to the version of tap used to run the
generator; you will have to regenerate both when you upgrade tap or it's
dependencies. Likewise you will have to re-run the tapenv generator when you
install or upgrade gems that the executable needs to access.
