= {Tap (Task Application)}[http://tap.rubyforge.org]

  tap n. to draw a supply from a resource

A configurable, distributable workflow framework.

== Description

Tap allows the construction of workflows that may be defined, configured, and
run from the command line. The tasks and joins composing a workflow are easy
to test, subclass, and distribute as gems.

Tap is the core of the
{Tap-Suite}[http://tap.rubyforge.org/tap-suite/index.html] 
which provides a standard library of 
{tasks}[http://tap.rubyforge.org/tap-tasks/index.html],
{generators}[http://tap.rubyforge.org/tap-gen/index.html], 
{test utilities}[http://tap.rubyforge.org/tap-test/index.html], 
and a
{server}[http://tap.rubyforge.org/tap-server/index.html] 
to execute workflows via HTTP.

* {Tutorial}[http://tap.rubyforge.org/tap-suite/files/doc/Tutorial.html], {API}[link:files/doc/API.html], {Structure}[link:files/doc/Class%20Reference.html]
* Website[http://tap.rubyforge.org]
* Lighthouse[http://bahuvrihi.lighthouseapp.com/projects/9908-tap-task-application/tickets]
* Github[http://github.com/bahuvrihi/tap/tree/master]
* {Google Group}[http://groups.google.com/group/ruby-on-tap]

== Usage

Tasks are defined as subclasses of Tap::Task.

  [lib/goodnight.rb]
  
  # Goodnight::task your basic goodnight moon task
  # Says goodnight with a configurable message.
  class Goodnight < Tap::Task
    config :message, 'goodnight'           # a goodnight message
    
    def process(name)
      "#{message} #{name}"
    end
  end

Tap automatically discovers tasks.

  % tap run -T
    sample:
      goodnight   # your basic goodnight moon task
    tap:
      dump        # the default dump task
      load        # the default load task
      
And generates command line documentation.

  % tap run -- goodnight --help
  Goodnight -- your basic goodnight moon task
  --------------------------------------------------------------------------------
    Says goodnight with a configurable message.
  --------------------------------------------------------------------------------
  usage: tap run -- goodnight NAME

  configurations:
          --message MESSAGE            a goodnight message

  options:
          --help                       Print this help
          --enque                      Manually enques self
          --config FILE                Specifies a config file

Tasks are immediately available for use in workflows, and may be configured as
if they were individual executables. This workflow joins the goodnight task to
a dump task, which prints the message to stdout.

  % tap run -- goodnight moon --: dump
  goodnight moon

  % tap run -- goodnight world --message hello --: dump
  hello world

=== Workflow Syntax

Workflows are specified on the command line using argument vectors separated
by option breaks (ie '--'). The argument vectors define the tasks while
modifications to the breaks specify joins.

A simple sequence.

  % tap run -- load 'goodnight moon' --: dump
  goodnight moon

A more formal way of specifying a sequence.

  % tap run -- load 'goodnight moon' -- dump --[0][1]
  goodnight moon

A fork.

  % tap run -- load 'goodnight moon' -- dump -- dump --[0][1,2]
  goodnight moon
  goodnight moon

A merge (note that dump receives the inputs in serial).

  % tap run -- load goodnight -- load moon -- dump --[0,1][2]
  goodnight
  moon

A synchronized merge (the printout is <tt>['goodnight', 'moon'].to_s</tt>).

  % tap run -- load goodnight -- load moon -- dump --[0,1][2].sync
  goodnightmoon

== Installation

Tap is available as a gem on RubyForge[http://rubyforge.org/projects/tap].  Use:

  % gem install tap

Tap requires an updated version of RubyGems[http://docs.rubygems.org/] 
(>= 1.2.0).  To check the version and update RubyGems:

  % gem --version
  % gem --update system

== Info 

Copyright (c) 2006-2009, Regents of the University of Colorado.
Developer:: {Simon Chiang}[http://bahuvrihi.wordpress.com], {Biomolecular Structure Program}[http://biomol.uchsc.edu/], {Hansen Lab}[http://hsc-proteomics.uchsc.edu/hansenlab/] 
Support:: CU Denver School of Medicine Deans Academic Enrichment Fund
License:: {MIT-Style}[link:files/MIT-LICENSE.html]