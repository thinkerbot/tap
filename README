= {Tap (Task Application)}[http://tap.rubyforge.org]

A framework for creating configurable, distributable, tasks and workflows.

== Description

Tap tasks are plain-old-ruby classes that are easy to test, subclass, use in 
scripts, and run from the command line.  Tasks support method-based configurations 
that map to command line options.  Tap can generate and utilize static config 
files, join tasks into workflows, as well as dump and reuse results.  Check out the 
links for tutorials, development, and bug tracking.

* Website[http://tap.rubyforge.org]
* Rubyforge[http://rubyforge.org/projects/tap]
* Lighthouse[http://bahuvrihi.lighthouseapp.com/projects/9908-tap-task-application/overview]
* Github[http://github.com/bahuvrihi/tap/tree/master]

=== Additional Notes:

- Task libraries are designed for distribution as gems.
- Tap and Rake[http://rake.rubyforge.org/] are targeted at different problems, but play 
  well together. See the {sample_tasks}[http://tap.rubyforge.org/sample_tasks] gem to use 
  rake tasks in tap.
- Tap is tested on MRI (the standard Ruby interpreter, versions 1.8.6 and 
  1.9.0) and JRuby[http://jruby.codehaus.org/].

=== Usage

A sample task illustrates the usage of tap:

  # Sample::manifest a sample task
  #
  # Sample simply prints an input using a user-specified configuration.
  class Sample < Tap::Task
  
    config :key, 'value'    # a sample config

    def process(input)
      result = "#{input} was processed with #{key}"
      log self.name, result
  
      result
    end
  end

Tap pulls documentation out of task classes to generate manifests and help:

  % tap run -T
    sample    # a sample task

  % tap -- sample --help
  Sample -- a sample task
  --------------------------------------------------------------------------------
    Sample simply prints an input using a user-specified configuration.
  --------------------------------------------------------------------------------
  usage: tap run -- sample INPUT
  
  configurations:
          --key KEY                    a sample config
  
  options:
      -h, --help                       Print this help
          --name NAME                  Specify a name
          --use FILE                   Loads inputs from file

Tasks are immediately available through tap and in the console:

  % tap -- sample one
    I[19:44:52]             sample one was processed with value

  % tap console
  >> require 'sample'; s = Sample.new; s.process('input')
    I[19:48:02]             sample input was processed with value
  => "input was processed with value"

=== Bugs/Known Issues

- Some inconsequential tests on JRuby fail due to bugs in JRuby itself.
- Several patches are required so that Tap runs properly on MRI 1.9.0.  These   
  will likely resolve themselves as 1.9.0 becomes stable.
- Despite the talk of workflows, the Workflow class should still be considered
  in progress.  Tasks themselves are stable.

== Installation

Tap is available as a gem on RubyForge[http://rubyforge.org/projects/tap].  Use:

  % gem install tap

== Info 

Copyright (c) 2006-2008, Regents of the University of Colorado.
Developer:: {Simon Chiang}[http://bahuvrihi.wordpress.com], {Biomolecular Structure Program}[http://biomol.uchsc.edu/], {Hansen Lab}[http://hsc-proteomics.uchsc.edu/hansenlab/] 
Support:: CU Denver School of Medicine Deans Academic Enrichment Fund
Licence:: MIT-Style

